.TH "Renderer" 3 "Sun Nov 23 2014" "Version 0.4.0" "VetoLC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Renderer \- 
.PP
The \fBRenderer\fP class\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Renderer\&.hpp>\fP
.PP
Inherits QWindow, and QOpenGLFunctions\&.
.SS "Public Slots"

.in +1c
.ti -1c
.RI "void \fBrenderNow\fP ()"
.br
.RI "\fI\fBRenderer::renderNow\fP\&. \fP"
.ti -1c
.RI "void \fBrenderLater\fP ()"
.br
.RI "\fI\fBRenderer::renderLater\fP\&. \fP"
.ti -1c
.RI "bool \fBupdateCode\fP (const QString &, const QString &)"
.br
.RI "\fI\fBRenderer::updateCode\fP\&. \fP"
.ti -1c
.RI "void \fBupdateAudioData\fP (QByteArray)"
.br
.RI "\fI\fBRenderer::updateAudioData\fP\&. \fP"
.ti -1c
.RI "void \fBonMessageLogged\fP (QOpenGLDebugMessage message)"
.br
.RI "\fI\fBRenderer::onMessageLogged\fP\&. \fP"
.in -1c
.SS "Signals"

.in +1c
.ti -1c
.RI "void \fBdoneSignal\fP (QString)"
.br
.ti -1c
.RI "void \fBerrored\fP (QString, int)"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRenderer\fP (QWindow *parent=0)"
.br
.RI "\fI\fBRenderer::Renderer\fP\&. \fP"
.ti -1c
.RI "\fBRenderer\fP (const QString &, const QString &, QWindow *parent=0)"
.br
.RI "\fI\fBRenderer::Renderer\fP\&. \fP"
.ti -1c
.RI "\fB~Renderer\fP ()"
.br
.RI "\fI\fBRenderer::~Renderer\fP\&. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual bool \fBevent\fP (QEvent *)"
.br
.RI "\fI\fBRenderer::event\fP\&. \fP"
.ti -1c
.RI "virtual void \fBexposeEvent\fP (QExposeEvent *)"
.br
.RI "\fI\fBRenderer::exposeEvent\fP\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
The \fBRenderer\fP class\&. 

A subclass of QWindow and QOPenGLFunctions that implements a GLSL fragment shader renderer\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Renderer::Renderer (QWindow *parent = \fC0\fP)\fC [explicit]\fP"

.PP
\fBRenderer::Renderer\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIparent\fP Parent object of the render window
.RE
.PP
Create a new \fBRenderer\fP with default shader 
.SS "Renderer::Renderer (const QString &filename, const QString &instructions, QWindow *parent = \fC0\fP)\fC [explicit]\fP"

.PP
\fBRenderer::Renderer\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP Name that should shown in the title 
.br
\fIinstructions\fP Shader code for execution 
.br
\fIparent\fP Parent object of the render window
.RE
.PP
Create a new \fBRenderer\fP with given code and set filename as title 
.PP
References onMessageLogged(), and updateAudioData()\&.
.SS "Renderer::~Renderer ()"

.PP
\fBRenderer::~Renderer\fP\&. Free resources 
.SH "Member Function Documentation"
.PP 
.SS "bool Renderer::event (QEvent *event)\fC [protected]\fP, \fC [virtual]\fP"

.PP
\fBRenderer::event\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIevent\fP The event that should be proccessed 
.RE
.PP
\fBReturns:\fP
.RS 4
True if the event was successful proccessed, otherwise false
.RE
.PP
Called if a new event is poped from the event-queue to render on update event and Q_EMIT doneSignal on close event\&. 
.PP
References renderNow()\&.
.SS "void Renderer::exposeEvent (QExposeEvent *)\fC [protected]\fP, \fC [virtual]\fP"

.PP
\fBRenderer::exposeEvent\fP\&. Called if the window is ready to start rendering 
.PP
References renderNow()\&.
.SS "void Renderer::onMessageLogged (QOpenGLDebugMessagemessage)\fC [slot]\fP"

.PP
\fBRenderer::onMessageLogged\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fImessage\fP Message text
.RE
.PP
Write the message text in the debug output 
.PP
Referenced by Renderer()\&.
.SS "void Renderer::renderLater ()\fC [slot]\fP"

.PP
\fBRenderer::renderLater\fP\&. Enqueue an update event to event queue 
.PP
Referenced by renderNow()\&.
.SS "void Renderer::renderNow ()\fC [slot]\fP"

.PP
\fBRenderer::renderNow\fP\&. Use the compiled shader to render on the widget 
.PP
References renderLater()\&.
.PP
Referenced by event(), and exposeEvent()\&.
.SS "void Renderer::updateAudioData (QByteArraydata)\fC [slot]\fP"

.PP
\fBRenderer::updateAudioData\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP New audio data
.RE
.PP
Copy the new sound-data to the graphics memory for visualisation 
.PP
Referenced by Renderer()\&.
.SS "bool Renderer::updateCode (const QString &filename, const QString &code)\fC [slot]\fP"

.PP
\fBRenderer::updateCode\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP Text for the title 
.br
\fIcode\fP New shader program code 
.RE
.PP
\fBReturns:\fP
.RS 4
True on success, otherwise false\&.
.RE
.PP
Set new title and compile new code for the shader program 

.SH "Author"
.PP 
Generated automatically by Doxygen for VetoLC from the source code\&.
